[tox]
envlist = py27
skip_missing_interpreters = true
whitelist_externals =
    mvn





[testenv]
passenv = *
basepython =
    py27: python2.7

setenv =
    
        PYTHONPATH = {toxinidir}/nolij
    

deps =
    -rrequirements.txt
    -rtest_requirements.txt
    bumpversion
    coverage
    prospector[with_everything]

commands =
    
    
    
    prospector -P {toxinidir}/.prospector.yml {toxinidir}/nolij
    py.test --junitxml=junit-jenkins-2.7.xml -s {toxinidir}/tests/
    coverage run --branch --source {toxinidir}/nolij -m py.test {toxinidir}/tests/
    coverage combine
    coverage report --fail-under 80 --include=* -m

[testenv:jenkins-2.7]
basepython = /usr/bin/python2.7
recreate = True

deps =
    -rrequirements.txt
    -rtest_requirements.txt
    bumpversion
    coverage
    prospector[with_everything]
    wheel
    pex==1.0.0.dev3

commands =
    prospector -P {toxinidir}/.prospector.yml nolij
    py.test --junitxml=junit-jenkins-2.7.xml -s tests/
    coverage run --branch --source nolij/ -m py.test tests/
    coverage combine
    coverage report --fail-under 80 --include=* -m
    pex -vvv . -c nolij -o dist/nolij.pex

[testenv:dev]
basepython = python2.7
skipsdist = true
envdir = env
commands =
    
    
    

[testenv:spark-repl]
basepython = python2.7
skipsdist = true
envdir = env
setenv =
    PYTHONPATH = {toxinidir}/nolij:{toxinidir}/thirdparty/spark/spark/python:{toxinidir}/thirdparty/spark/spark/python/lib/py4j-0.8.2.1-src.zip
    MASTER = local[4]
    PYSPARK_PYTHON = ipython
    SPARK_HOME = {toxinidir}/thirdparty/spark/spark

deps =
    -rrequirements.txt
    -rtest_requirements.txt
    ipython

commands =
    {toxinidir}/thirdparty/getspark.sh
    
        {toxinidir}/thirdparty/spark/spark/bin/pyspark --driver-memory 2g
    

[testenv:package]
basepython = /usr/bin/python2.7
deps =
    wheel
    pex==1.0.0.dev3
commands = pex -vvv . -c nolij -o dist/nolij.pex

[testenv:licenses]
basepython = python2.7
skipsdist = true
envdir = env
commands = li
    -rrequirements.txt
deps = license-info

[testenv:docs]
changedir = docs/
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test_requirements.txt
    sphinx
commands =
    sphinx-build -b linkcheck ./ _build/
    sphinx-build -b html ./ _build/

[pytest]
norecursedirs =
    .git
    .tox
    dist
    build
    env
